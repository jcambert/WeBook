using MicroS_Common.Types;
using MicroS_Common.RestEase;
using RestEase;
using System;
using System.Threading.Tasks;
using webook.domain.typeDeProprietes.Dto;
using webook.domain.typeDeProprietes.Queries;

/// <summary>
/// This file was generated by the yeoman generator "generator-micros"
/// @author: Ambert Jean-Christophe
/// @email: jc.ambert@free.fr
/// @created_on: Sun Jul 12 2020 16:56:25 GMT+0200 (GMT+02:00)
/// </summary>
namespace webook.api.Services
{
    /// <summary>
    /// TypeDePropriete Service created by <see cref="https://www.nuget.org/packages/RestEase/">Restease</see>
    /// </summary>
    [ServiceForwarder("webook-channelmanager-service")]
    [SerializationMethods(Query = QuerySerializationMethod.Serialized)]
    public partial interface ITypeDeProprietesService
    {
        /// <summary>
        /// Get typeDePropriete by its Id
        /// </summary>
        /// <param name="id">the id of  TypeDePropriete</param>
        /// <returns>TypeDeProprieteDto</returns>
        [AllowAnyStatusCode]
        [Get("typeDeProprietes/{id}")]
        Task<TypeDeProprieteDto> GetAsync([Path] Guid id);


         /// <summary>
        /// Get list of typeDeProprietes by BrowseTypeDeProprietes Query
        /// </summary>
        /// <param name="query">The Browse typeDeProprietes query</param>
        /// <returns>a list of TypeDeProprieteDto</returns>
        [AllowAnyStatusCode]
        [Get("typeDeProprietes")]
        Task<PagedResult<TypeDeProprieteDto>> BrowseAsync([Query] BrowseTypeDeProprietes query);
    }
}
